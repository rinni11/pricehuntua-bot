import os
import aiohttp
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# /start –∫–æ–º–∞–Ω–¥–∞ –∑ –∫–Ω–æ–ø–∫–æ—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    location_button = KeyboardButton("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é üìç", request_location=True)
    reply_markup = ReplyKeyboardMarkup([[location_button]], resize_keyboard=True, one_time_keyboard=True)
    
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç BenzOK. –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–≤–æ—é –ª–æ–∫–∞—Ü—ñ—é –π –∑–Ω–∞–π—Ç–∏ –¥–µ—à–µ–≤—ñ –ê–ó–° –ø–æ—Ä—è–¥ ‚õΩÔ∏è",
        reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–∫–∞ –ª–æ–∫–∞—Ü—ñ—ó —Ç–∞ –ø–æ—à—É–∫ –ê–ó–°
async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    location = update.message.location
    lat = location.latitude
    lon = location.longitude

    await update.message.reply_text("–®—É–∫–∞—é –Ω–∞–π–±–ª–∏–∂—á—ñ –ê–ó–° –ø–æ–±–ª–∏–∑—É‚Ä¶ üîç")

    url = (
        f"https://nominatim.openstreetmap.org/search?"
        f"q=gas+station&format=json&limit=3&"
        f"lat={lat}&lon={lon}&addressdetails=1"
    )

    headers = {
        "User-Agent": "BenzOK-Bot/1.0 (contact@example.com)"  # –∑–∞–º—ñ–Ω–∏ email –Ω–∞ —Å–≤—ñ–π
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=headers) as resp:
            data = await resp.json()

    if not data:
        await update.message.reply_text("üòï –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ê–ó–° –ø–æ–±–ª–∏–∑—É.")
        return

    message = "üìç –ù–∞–π–±–ª–∏–∂—á—ñ –ê–ó–°:\n\n"
    for place in data:
        name = place.get("display_name", "–ë–µ–∑ –Ω–∞–∑–≤–∏")
        lat = place["lat"]
        lon = place["lon"]
        maps_url = f"https://www.google.com/maps?q={lat},{lon}"
        message += f"‚ñ™Ô∏è [{name}]({maps_url})\n\n"

    await update.message.reply_text(message, parse_mode="Markdown")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    token = os.getenv("TELEGRAM_TOKEN")
    if not token:
        raise ValueError("‚ùå TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∏–π!")

    app = ApplicationBuilder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.LOCATION, handle_location))
    app.run_polling()
